// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       String    @id @unique @default(uuid())
  email    String    @unique
  username String?
  photo    String
  files    File[]
  message  Message[]
  joinedAt DateTime  @default(now())
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id           String       @id @unique @default(uuid())
  name         String
  userid       String
  user         User         @relation(fields: [userid], references: [id])
  uploadStatus UploadStatus @default(PENDING)
  url          String
  key          String
  message      Message[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
}

model Message {
  id            String   @id @default(uuid())
  text          String   @db.Text()
  isUserMessage Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  User          User?    @relation(fields: [userId], references: [id])
  userId        String?
  File          File?    @relation(fields: [fileId], references: [id])
  fileId        String?
}
